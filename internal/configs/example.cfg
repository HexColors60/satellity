package configs

// Should be moved to env vars, command line flags, a config file, or a config service.
const (
	Name             = "Yet another open source forum using Golang."
	Environment      = "test"
	BuildVersion     = "BUILD_VERSION"
)

const (
	GithubClientID     = "03e10a9b62b4533e65c5"
	GithubClientSecret = "6f9105c0fd87567947775ea482225bbb666201ce"
)

// Operators are used to determine who is admin, which is using in user.Role()
var Operators = map[string]bool{
	"hi@godiscourse.com": true,
}

func DefaultOptions() *Options {
	return &Options{
		GoDiscourseURL:  "http://localhost",
		GoDiscoursePort: "4000",
		DbUser:          "godiscourse",
		DbPassword:      "godiscourse",
		DbPort:          "5432",
		DbName:          "godiscourse_test",
		Environment:     Environment,
	}
}

type Options struct {
	GoDiscourseURL  string `long:"url" env:"GODISCOURSE_URL" default:"http://localhost" required:"true"`
	GoDiscoursePort string `long:"port" env:"GODISCOURSE_PORT" default:"4000" requred:"true"`
	DbUser          string `long:"dbuser" env:"DB_USER" requred:"true"`
	DbPassword      string `long:"dbpassword" env:"DB_PASSWORD"`
	DbHost          string `long:"dbhost" env:"DB_HOST" default:"localhost"`
	DbPort          string `long:"dbport" env:"DB_PORT" default:"5432"`
	DbName          string `long:"dbname" env:"DB_NAME" default:"godiscourse_dev"`
	Environment     string `long:"environment" env:"ENV" default:"development"`
}
